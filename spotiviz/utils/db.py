import os.path
import sqlalchemy as sa

from spotiviz import get_data
from spotiviz.utils.constants import sql


def run_script(script: str, conn = None) -> None:
    """
    Run the specified script in the specified sqlite connection. If no
    connection is given, the default one to the program's main projects
    database is used.

    Note that the provided connection is automatically closed when after
    executing the script.

    Args:
        script: A path to the .sql script file to execute.
        conn: [Optional] the connection to run, or the main program
        database if none is provided.

    Returns:
        None
    """

    if conn is None:
        conn = get_conn()

    with open(script) as s:
        conn.executescript(s.read())
    conn.close()


def get_engine(path: str):
    """
    Initialize a connection to the specified SQLite database file. If no path
    is given (or it is None), a connection to the default projects.db file is
    returned that governs the entire Spotiviz installation.

    Otherwise, a connection to the database at the specified path is returned.

    Note that if a file at the specified path already exists, it will be
    overwritten.

    Args:
        path: [Optional] The full path to a SQLite database file to connect to.

    Returns:
        A connection to the specified database.
    """

    return sa.create_engine(f'sqlite:///{path}', echo=True)



def get_last_id(conn) -> int:
    """
    Get the last ID from an auto incrementing column that was generated when
    inserting the most recent record with this connection.

    Args:
        conn: the connection that just inserted some record.

    Returns:
        The autogenerated id that was paired with the inserted record.
    """

    return conn.execute(sql.GET_LAST_ID).fetchone()[0]


GLOBAL_ENGINE = get_engine(
    get_data(os.path.join('sqlite', sql.DATABASE_PROGRAM_NAME)))


PROJECT_ENGINE = None
